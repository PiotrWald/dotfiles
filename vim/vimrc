call plug#begin('~/.vim/plugged')
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'thoughtbot/vim-rspec'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tpope/vim-pathogen'
Plug 'slim-template/vim-slim'
Plug 'w0rp/ale'
Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-rails'
Plug 'Shougo/neocomplete.vim'
Plug 'eugen0329/vim-esearch'
Plug 'tpope/vim-eunuch'
Plug 'elixir-editors/vim-elixir'
Plug 'slashmili/alchemist.vim'
Plug 'patstockwell/vim-monokai-tasty'
Plug 'christoomey/vim-tmux-navigator'
Plug 'christoomey/vim-tmux-runner'
Plug 'janko/vim-test'
Plug 'benmills/vimux'
call plug#end()

execute pathogen#infect()

let g:ctrlp_user_command = 'ag %s -l --hidden --nocolor -g ""'
let g:ctrlp_use_caching = 0

let test#strategy = "vtr"

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Set specific linters
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'ruby': ['rubocop'],
\}

let g:ale_linters_explicit = 1
let g:airline#extensions#ale#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme='badcat'
let g:ale_sign_column_always = 1
let g:ale_set_highlights = 0

" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

if &t_Co > 2 || has("gui_running")
  " Switch on highlighting the last used search pattern.
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78
  augroup END

else

  set autoindent		" always set autoindenting on
endif " has("autocmd")

if has('syntax') && has('eval')
  packadd! matchit
endif

autocmd VimResized * :wincmd =

nmap 0 ^
let mapleader = "\<Space>"

" Mapping for test-vim
nnoremap <silent> <Leader>t :TestFile<CR>
nnoremap <silent> <Leader>s :TestNearest<CR>
nnoremap <silent> <Leader>l :TestLast<CR>
nnoremap <silent> <Leader>a :TestSuite<CR>
nnoremap <silent> <Leader>gt :TestVisit<CR>

" Other key mapping
nmap <leader>vr :sp $MYVIMRC<cr>
nmap <leader>so :source $MYVIMRC<cr>
nmap <leader>v :vnew <C-R>=escape(expand("%:p:h"), ' ') . '/'<CR>
nmap <leader>co ggVG"*y
nmap <leader>sc :sp db/schema.rb<cr>

nnoremap <leader>pry :VtrOpenRunner {'orientation': 'h', 'percentage': 50,'cmd': 'pry'}<cr>


nmap j gj
nmap k gk

imap jk <esc>
imap kj <esc>

set nobackup
set nocompatible
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab
set noundofile
set number
set hlsearch
set incsearch
set autoindent
set background=dark
set ruler
set autoread
set scrolloff=999
set splitbelow
set noswapfile
set splitright
" set number relativenumber

colorscheme Tech49

syntax on

filetype indent on
filetype on
filetype indent on
filetype plugin on
